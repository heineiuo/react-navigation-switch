var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.getDefaultHeaderHeight=exports.createSwitchNavigator=void 0;var _defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));var _reactNative=require("react-native");var _native=require("@react-navigation/native");var _reactNativeSafeAreaContext=require("react-native-safe-area-context");var _jsxRuntime=require("react/jsx-runtime");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){(0,_defineProperty2.default)(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}var getDefaultHeaderHeight=function getDefaultHeaderHeight(layout,statusBarHeight){var isLandscape=layout.width>layout.height;var headerHeight;if(_reactNative.Platform.OS==="ios"){if(isLandscape&&!_reactNative.Platform.isPad){headerHeight=32;}else{headerHeight=44;}}else if(_reactNative.Platform.OS==="android"){headerHeight=56;}else{headerHeight=64;}return headerHeight+statusBarHeight;};exports.getDefaultHeaderHeight=getDefaultHeaderHeight;function Header(props){var scene=props.scene,layout=props.layout;var route=scene.route,descriptor=scene.descriptor;var name=route.name;var insets=(0,_reactNativeSafeAreaContext.useSafeAreaInsets)();var _useTheme=(0,_native.useTheme)(),colors=_useTheme.colors;var _descriptor$options=descriptor.options,title=_descriptor$options.title,headerTitle=_descriptor$options.headerTitle,_descriptor$options$h=_descriptor$options.headerTitleAlign,headerTitleAlign=_descriptor$options$h===void 0?_reactNative.Platform.select({ios:"center",default:"left"}):_descriptor$options$h,headerLeft=_descriptor$options.headerLeft,headerLeftAccessibilityLabel=_descriptor$options.headerLeftAccessibilityLabel,headerRight=_descriptor$options.headerRight,headerTitleAllowFontScaling=_descriptor$options.headerTitleAllowFontScaling,headerTitleStyle=_descriptor$options.headerTitleStyle,headerTintColor=_descriptor$options.headerTintColor,headerPressColorAndroid=_descriptor$options.headerPressColorAndroid,headerStyle=_descriptor$options.headerStyle,_descriptor$options$h2=_descriptor$options.headerStatusBarHeight,headerStatusBarHeight=_descriptor$options$h2===void 0?insets.top:_descriptor$options$h2;var currentTitle=typeof headerTitle!=="function"&&headerTitle!==undefined?headerTitle:title!==undefined?title:scene.route.name;var defaultHeight=getDefaultHeaderHeight(layout,headerStatusBarHeight);var leftButton=headerLeft?headerLeft({tintColor:headerTintColor}):null;var rightButton=headerRight?headerRight({tintColor:headerTintColor}):null;return(0,_jsxRuntime.jsxs)(_reactNative.View,{pointerEvents:"box-none",style:[{height:defaultHeight,backgroundColor:colors.card,borderBottomColor:colors.border,shadowColor:colors.border},styles.container,headerStyle],children:[(0,_jsxRuntime.jsx)(_reactNative.View,{pointerEvents:"none",style:{height:headerStatusBarHeight}}),(0,_jsxRuntime.jsxs)(_reactNative.View,{pointerEvents:"box-none",style:styles.content,children:[leftButton?(0,_jsxRuntime.jsx)(_reactNative.View,{pointerEvents:"box-none",style:[styles.left,{left:insets.left}],children:leftButton}):null,(0,_jsxRuntime.jsx)(_reactNative.View,{pointerEvents:"box-none",style:[headerTitleAlign==="left"?{position:"absolute",left:(leftButton?72:16)+insets.left,right:(rightButton?72:16)+insets.right}:{marginHorizontal:(leftButton?32:16)+Math.max(insets.left,insets.right)}],children:typeof headerTitle==="function"?headerTitle({children:currentTitle,allowFontScaling:headerTitleAllowFontScaling,tintColor:headerTintColor,style:headerTitleStyle}):(0,_jsxRuntime.jsx)(_reactNative.Text,{accessibilityRole:"header","aria-level":"1",numberOfLines:1,allowFontScaling:headerTitleAllowFontScaling,style:[styles.title,{color:headerTintColor!=null?headerTintColor:colors.text},styles.title,headerTitleStyle],children:currentTitle})}),rightButton?(0,_jsxRuntime.jsx)(_reactNative.View,{pointerEvents:"box-none",style:[styles.right,{right:insets.right}],children:rightButton}):null]})]});}function SwitchNavigator(props){var children=props.children,screenOptions=props.screenOptions,initialRouteName=props.initialRouteName;var _useNavigationBuilder=(0,_native.useNavigationBuilder)(_native.TabRouter,{children:children,screenOptions:screenOptions,initialRouteName:initialRouteName}),state=_useNavigationBuilder.state,navigation=_useNavigationBuilder.navigation,descriptors=_useNavigationBuilder.descriptors;var dimensions=(0,_reactNative.useWindowDimensions)();return(0,_jsxRuntime.jsx)(_native.NavigationHelpersContext.Provider,{value:navigation,children:(0,_jsxRuntime.jsx)(_reactNative.View,{style:[{flex:1}],children:state.routes.map(function(route,i){var descriptor=descriptors[route.key];var _descriptor$options2=descriptor.options,_descriptor$options2$=_descriptor$options2.header,header=_descriptor$options2$===void 0?function(props){return(0,_jsxRuntime.jsx)(Header,_objectSpread({},props));}:_descriptor$options2$,_descriptor$options2$2=_descriptor$options2.headerShown,headerShown=_descriptor$options2$2===void 0?false:_descriptor$options2$2;return(0,_jsxRuntime.jsxs)(_reactNative.View,{style:[_reactNative.StyleSheet.absoluteFill,{display:i===state.index?"flex":"none"}],children:[headerShown?(0,_jsxRuntime.jsx)(_native.NavigationContext.Provider,{value:descriptor.navigation,children:(0,_jsxRuntime.jsx)(_native.NavigationRouteContext.Provider,{value:route,children:header({layout:dimensions,scene:{route:route,descriptor:descriptor}})})}):null,descriptor.render()]},route.key);})})});}var styles=_reactNative.StyleSheet.create({container:_objectSpread(_objectSpread({},_reactNative.Platform.select({android:{elevation:4},ios:{shadowOpacity:0.85,shadowRadius:0,shadowOffset:{width:0,height:_reactNative.StyleSheet.hairlineWidth}},default:{borderBottomWidth:_reactNative.StyleSheet.hairlineWidth}})),{},{zIndex:1}),content:{flex:1,flexDirection:"row",alignItems:"center",justifyContent:"center"},title:_reactNative.Platform.select({ios:{fontSize:17,fontWeight:"600"},android:{fontSize:20,fontFamily:"sans-serif-medium",fontWeight:"normal"},default:{fontSize:18,fontWeight:"500"}}),icon:{height:24,width:24,margin:3,resizeMode:"contain"},touchable:{marginHorizontal:11},left:{position:"absolute",left:0,top:0,bottom:0,justifyContent:"center",alignItems:"flex-start"},right:{position:"absolute",right:0,top:0,bottom:0,justifyContent:"center",alignItems:"flex-end"}});var createSwitchNavigator=(0,_native.createNavigatorFactory)(SwitchNavigator);exports.createSwitchNavigator=createSwitchNavigator;
//# sourceMappingURL=index.js.map