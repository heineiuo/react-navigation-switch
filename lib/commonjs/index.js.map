{"version":3,"sources":["../../src/index.tsx"],"names":["getDefaultHeaderHeight","layout","statusBarHeight","isLandscape","width","height","headerHeight","Platform","OS","isPad","Header","props","scene","route","descriptor","name","insets","colors","options","title","headerTitle","headerTitleAlign","select","ios","default","headerLeft","headerLeftAccessibilityLabel","headerRight","headerTitleAllowFontScaling","headerTitleStyle","headerTintColor","headerPressColorAndroid","headerStyle","headerStatusBarHeight","top","currentTitle","undefined","defaultHeight","leftButton","tintColor","rightButton","backgroundColor","card","borderBottomColor","border","shadowColor","styles","container","content","left","position","right","marginHorizontal","Math","max","children","allowFontScaling","style","color","text","SwitchNavigator","screenOptions","initialRouteName","TabRouter","state","navigation","descriptors","dimensions","flex","routes","map","i","key","header","headerShown","StyleSheet","absoluteFill","display","index","render","create","android","elevation","shadowOpacity","shadowRadius","shadowOffset","hairlineWidth","borderBottomWidth","zIndex","flexDirection","alignItems","justifyContent","fontSize","fontWeight","fontFamily","icon","margin","resizeMode","touchable","bottom","createSwitchNavigator"],"mappings":"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","sourcesContent":["/**\n * Most of codes are copied from https://github.com/react-navigation/react-navigation\n */\n\nimport {\n  View,\n  StyleSheet,\n  useWindowDimensions,\n  Text,\n  Platform,\n  StyleProp,\n  TextStyle,\n  ViewStyle,\n} from \"react-native\";\nimport {\n  TabRouter,\n  NavigationHelpersContext,\n  useNavigationBuilder,\n  createNavigatorFactory,\n  NavigationRouteContext,\n  NavigationContext,\n  useTheme,\n} from \"@react-navigation/native\";\nimport type {\n  ParamListBase,\n  TabNavigationState,\n  Descriptor,\n  Route,\n  TabRouterOptions,\n} from \"@react-navigation/native\";\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\n\nexport type Layout = { width: number; height: number };\n\nexport const getDefaultHeaderHeight = (\n  layout: Layout,\n  statusBarHeight: number\n): number => {\n  const isLandscape = layout.width > layout.height;\n\n  let headerHeight;\n\n  if (Platform.OS === \"ios\") {\n    if (isLandscape && !Platform.isPad) {\n      headerHeight = 32;\n    } else {\n      headerHeight = 44;\n    }\n  } else if (Platform.OS === \"android\") {\n    headerHeight = 56;\n  } else {\n    headerHeight = 64;\n  }\n\n  return headerHeight + statusBarHeight;\n};\n\nexport declare type SwitchNavigationState<ParamList extends ParamListBase> =\n  Omit<TabNavigationState<ParamList>, \"type\" | \"history\"> & {\n    /**\n     * Type of the router, in this case, it's switch.\n     */\n    type: \"switch\";\n    /**\n     * List of previously visited route keys and switch open status.\n     */\n    history: (\n      | {\n          type: \"route\";\n          key: string;\n        }\n      | {\n          type: \"switch\";\n        }\n    )[];\n  };\n\nexport declare type SwitchNavigationOptions = TabRouterOptions;\n\ntype SwitchHeaderOptions = {\n  /**\n   * String or a function that returns a React Element to be used by the header.\n   * Defaults to scene `title`.\n   * It receives `allowFontScaling`, `tintColor`, `style` and `children` in the options object as an argument.\n   * The title string is passed in `children`.\n   */\n  headerTitle?:\n    | string\n    | ((props: {\n        /**\n         * Whether title font should scale to respect Text Size accessibility settings.\n         */\n        allowFontScaling?: boolean;\n        /**\n         * Tint color for the header.\n         */\n        tintColor?: string;\n        /**\n         * Content of the title element. Usually the title string.\n         */\n        children?: string;\n        /**\n         * Style object for the title element.\n         */\n        style?: StyleProp<TextStyle>;\n      }) => React.ReactNode);\n  /**\n   * How to align the the header title.\n   * Defaults to `center` on iOS and `left` on Android.\n   */\n  headerTitleAlign?: \"left\" | \"center\";\n  /**\n   * Style object for the title component.\n   */\n  headerTitleStyle?: StyleProp<TextStyle>;\n  /**\n   * Whether header title font should scale to respect Text Size accessibility settings. Defaults to `false`.\n   */\n  headerTitleAllowFontScaling?: boolean;\n  /**\n   * Function which returns a React Element to display on the left side of the header.\n   */\n  headerLeft?: (props: { tintColor?: string }) => React.ReactNode;\n  /**\n   * Accessibility label for the header left button.\n   */\n  headerLeftAccessibilityLabel?: string;\n  /**\n   * Function which returns a React Element to display on the right side of the header.\n   */\n  headerRight?: (props: { tintColor?: string }) => React.ReactNode;\n  /**\n   * Color for material ripple (Android >= 5.0 only).\n   */\n  headerPressColorAndroid?: string;\n  /**\n   * Tint color for the header.\n   */\n  headerTintColor?: string;\n  /**\n   * Style object for the header. You can specify a custom background color here, for example.\n   */\n  headerStyle?: StyleProp<ViewStyle>;\n  /**\n   * Extra padding to add at the top of header to account for translucent status bar.\n   * By default, it uses the top value from the safe area insets of the device.\n   * Pass 0 or a custom value to disable the default behaviour, and customize the height.\n   */\n  headerStatusBarHeight?: number;\n\n  /**\n   * Title text for the screen.\n   */\n  title?: string;\n\n  /**\n   * Function that given `HeaderProps` returns a React Element to display as a header.\n   */\n  header?: (props: SwitchHeaderProps) => React.ReactNode;\n\n  /**\n   * Whether to show the header. The header is not shown by default.\n   * Setting this to `true` shows the header.\n   */\n  headerShown?: boolean;\n\n  /**\n   * Title string of a screen displayed in the drawer\n   * or a function that given { focused: boolean, color: string } returns a React.Node\n   * When undefined, scene title is used.\n   */\n  drawerLabel?:\n    | string\n    | ((props: { color: string; focused: boolean }) => React.ReactNode);\n\n  /**\n   * A function that given { focused: boolean, color: string } returns a React.Node to display an icon the drawer.\n   */\n  drawerIcon?: (props: {\n    color: string;\n    size: number;\n    focused: boolean;\n  }) => React.ReactNode;\n\n  /**\n   * Whether you can use gestures to open or close the drawer.\n   * Setting this to `false` disables swipe gestures as well as tap on overlay to close.\n   * See `swipeEnabled` to disable only the swipe gesture.\n   * Defaults to `true`.\n   * Not supported on Web.\n   */\n  gestureEnabled?: boolean;\n\n  /**\n   * Whether you can use swipe gestures to open or close the drawer.\n   * Defaults to `true`.\n   * Not supported on Web.\n   */\n  swipeEnabled?: boolean;\n\n  /**\n   * Whether this screen should be unmounted when navigating away from it.\n   * Defaults to `false`.\n   */\n  unmountOnBlur?: boolean;\n};\n\ntype SwitchHeaderProps = {\n  /**\n   * Layout of the screen.\n   */\n  layout: Layout;\n  /**\n   * Object representing the current scene, such as the route object and descriptor.\n   */\n  scene: {\n    route: Route<string>;\n    descriptor: Descriptor<\n      ParamListBase,\n      string,\n      SwitchNavigationState<ParamListBase>,\n      SwitchHeaderOptions\n    >;\n  };\n};\n\nfunction Header(props: SwitchHeaderProps) {\n  const { scene, layout } = props;\n  const { route, descriptor } = scene;\n  const { name } = route;\n  const insets = useSafeAreaInsets();\n  const { colors } = useTheme();\n\n  const {\n    title,\n    headerTitle,\n    headerTitleAlign = Platform.select({\n      ios: \"center\",\n      default: \"left\",\n    }),\n    headerLeft,\n    headerLeftAccessibilityLabel,\n    headerRight,\n    headerTitleAllowFontScaling,\n    headerTitleStyle,\n    headerTintColor,\n    headerPressColorAndroid,\n    headerStyle,\n    headerStatusBarHeight = insets.top,\n  } = descriptor.options;\n\n  const currentTitle =\n    typeof headerTitle !== \"function\" && headerTitle !== undefined\n      ? headerTitle\n      : title !== undefined\n      ? title\n      : scene.route.name;\n\n  const defaultHeight = getDefaultHeaderHeight(layout, headerStatusBarHeight);\n\n  const leftButton = headerLeft\n    ? headerLeft({ tintColor: headerTintColor })\n    : null;\n\n  const rightButton = headerRight\n    ? headerRight({ tintColor: headerTintColor })\n    : null;\n\n  return (\n    <View\n      pointerEvents=\"box-none\"\n      style={[\n        {\n          height: defaultHeight,\n          backgroundColor: colors.card,\n          borderBottomColor: colors.border,\n          shadowColor: colors.border,\n        },\n        styles.container,\n        headerStyle,\n      ]}\n    >\n      <View pointerEvents=\"none\" style={{ height: headerStatusBarHeight }} />\n\n      <View pointerEvents=\"box-none\" style={styles.content}>\n        {leftButton ? (\n          <View\n            pointerEvents=\"box-none\"\n            style={[styles.left, { left: insets.left }]}\n          >\n            {leftButton}\n          </View>\n        ) : null}\n        <View\n          pointerEvents=\"box-none\"\n          style={[\n            headerTitleAlign === \"left\"\n              ? {\n                  position: \"absolute\",\n                  left: (leftButton ? 72 : 16) + insets.left,\n                  right: (rightButton ? 72 : 16) + insets.right,\n                }\n              : {\n                  marginHorizontal:\n                    (leftButton ? 32 : 16) +\n                    Math.max(insets.left, insets.right),\n                },\n          ]}\n        >\n          {typeof headerTitle === \"function\" ? (\n            headerTitle({\n              children: currentTitle,\n              allowFontScaling: headerTitleAllowFontScaling,\n              tintColor: headerTintColor,\n              style: headerTitleStyle,\n            })\n          ) : (\n            <Text\n              accessibilityRole=\"header\"\n              aria-level=\"1\"\n              numberOfLines={1}\n              allowFontScaling={headerTitleAllowFontScaling}\n              style={[\n                styles.title,\n                { color: headerTintColor ?? colors.text },\n                styles.title,\n                headerTitleStyle,\n              ]}\n            >\n              {currentTitle}\n            </Text>\n          )}\n        </View>\n        {rightButton ? (\n          <View\n            pointerEvents=\"box-none\"\n            style={[styles.right, { right: insets.right }]}\n          >\n            {rightButton}\n          </View>\n        ) : null}\n      </View>\n    </View>\n  );\n}\n\nfunction SwitchNavigator(props: {\n  initialRouteName: string;\n  children: any;\n  screenOptions: any;\n}): JSX.Element {\n  const { children, screenOptions, initialRouteName } = props;\n  const { state, navigation, descriptors } = useNavigationBuilder(TabRouter, {\n    children,\n    screenOptions,\n    initialRouteName,\n  });\n  const dimensions = useWindowDimensions();\n\n  return (\n    <NavigationHelpersContext.Provider value={navigation}>\n      <View style={[{ flex: 1 }]}>\n        {state.routes.map((route, i) => {\n          const descriptor = descriptors[route.key];\n          const {\n            header = (props: any) => <Header {...props} />,\n            headerShown = false,\n          } = descriptor.options;\n\n          return (\n            <View\n              key={route.key}\n              style={[\n                StyleSheet.absoluteFill,\n                { display: i === state.index ? \"flex\" : \"none\" },\n              ]}\n            >\n              {headerShown ? (\n                <NavigationContext.Provider value={descriptor.navigation}>\n                  <NavigationRouteContext.Provider value={route}>\n                    {header({\n                      layout: dimensions,\n                      scene: { route, descriptor },\n                    })}\n                  </NavigationRouteContext.Provider>\n                </NavigationContext.Provider>\n              ) : null}\n\n              {descriptor.render()}\n            </View>\n          );\n        })}\n      </View>\n    </NavigationHelpersContext.Provider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    ...Platform.select({\n      android: {\n        elevation: 4,\n      },\n      ios: {\n        shadowOpacity: 0.85,\n        shadowRadius: 0,\n        shadowOffset: {\n          width: 0,\n          height: StyleSheet.hairlineWidth,\n        },\n      },\n      default: {\n        borderBottomWidth: StyleSheet.hairlineWidth,\n      },\n    }),\n    zIndex: 1,\n  },\n  content: {\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  title: Platform.select({\n    ios: {\n      fontSize: 17,\n      fontWeight: \"600\",\n    },\n    android: {\n      fontSize: 20,\n      fontFamily: \"sans-serif-medium\",\n      fontWeight: \"normal\",\n    },\n    default: {\n      fontSize: 18,\n      fontWeight: \"500\",\n    },\n  }),\n  icon: {\n    height: 24,\n    width: 24,\n    margin: 3,\n    resizeMode: \"contain\",\n  },\n  touchable: {\n    marginHorizontal: 11,\n  },\n  left: {\n    position: \"absolute\",\n    left: 0,\n    top: 0,\n    bottom: 0,\n    justifyContent: \"center\",\n    alignItems: \"flex-start\",\n  },\n  right: {\n    position: \"absolute\",\n    right: 0,\n    top: 0,\n    bottom: 0,\n    justifyContent: \"center\",\n    alignItems: \"flex-end\",\n  },\n});\n\nexport const createSwitchNavigator = createNavigatorFactory(SwitchNavigator);\n"],"file":"index.js"}